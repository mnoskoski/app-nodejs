name: Docker Build App
on:
  push:
    branches:
      - master
env:
  agentSO: ubuntu-latest
  NODE-VERSION: '14'
jobs:
  getValuesEnvironment:
    runs-on: ubuntu-latest
    steps:
      - name: HelloWorldWithDate
        run: echo "Hello World $(date)"
  
  ScanSecurity:
    runs-on: ubuntu-latest
    needs: getValuesEnvironment
    steps:
      - uses: actions/checkout@v2
      - name: installDockerScan
        run: curl -L https://download.docker.com/linux/ubuntu/dists/hirsute/pool/stable/amd64/docker-scan-plugin_0.7.0~ubuntu-hirsute_amd64.deb -o docker-scan.deb      
      - name: installpackage
        run: sudo dpkg -i docker-scan.deb
      - name: export variable
        run: | 
          export DOCKER_SCAN_SUGGEST=false
          echo $DOCKER_SCAN_SUGGEST
      - name: docker-scan
        run: |
          docker scan hello-world
      - name: ExecuteDockerScan
        run: docker scan -f Dockerfile docker-scan:e2e
        
      - name: Install Trivy
        run: |
          sudo snap install trivy
      - name: ValidateImage
        run: |
          trivy image node 
      - name: testNpmAuditPackageJson
        run: |
          npm run audit
        continue-on-error: true
      - name: ValidateNPMAudit
        if: ${{ failure() }}
        run: echo "::error::A etapa de audit falhou. Vulnerabilidades foram encontradas"

  TestUnitAndIntegration:
    runs-on: ubuntu-latest
    needs: ScanSecurity
    steps:
      - uses: actions/checkout@v2
      - name: DockerBuildImage
        run: docker build . -t mnoskoski/app-nodesjs
      - name: DockerRun
        run: docker run -it -d -p 8080:4000 mnoskoski/app-nodesjs
      - name: DockerComposeUp
        run: docker-compose -f docker-compose.yaml up -d --build
      - name: testingExecution
        run: docker ps -a

  BuildAndPushApp:
    runs-on: ubuntu-latest
    environment:
      name: cross-environment
    needs: TestUnitAndIntegration
    steps:
      - uses: actions/checkout@v2
      - name: Docker Login - Docker Hub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker images
        uses: docker/build-push-action@v2.8.0
        with:
          file: Dockerfile
          push: true
          context: .
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/app-nodejs:latest

  deploy-dev:
    runs-on: ubuntu-latest
    environment:
      name: dev
      url: 'http://mnoskoski-dev.com'
    needs: BuildAndPushApp
    steps:
      - name: DeployDev
        run: echo "deploy sucesso"
      
  deploy-hmg:
    runs-on: ubuntu-latest
    environment:
      name: hmg
      url: 'mnoskoski-hmg.com'
    needs: deploy-dev
    steps:
      - name: deployingHmg
        run: echo "deploy sucesso"

  deploy-prod:
    runs-on: ubuntu-latest
    environment:
      name: prod
      url: 'mnoskoski-prod.com'
    needs: deploy-hmg
    steps:
      - name: deployingProd
        run: echo "deploy sucesso"
